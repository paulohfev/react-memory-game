{"version":3,"sources":["data/cardsData.js","components/Card/index.js","utils/shuffleCards.js","components/ResetButton/index.js","components/ScoreCounter/index.js","components/CardsList/index.js","App.js","index.js"],"names":["cardsData","id","visible","value","Card","card","cards","selectedCards","setCards","setSelectedCards","className","onClick","map","c","changedCardVisibility","updateCardVisibility","flipCard","shuffleCards","document","querySelectorAll","forEach","randomPos","Math","floor","random","style","order","ResetButton","ScoreCounter","scoreCount","useRef","useState","animate","setAnimate","shakeComponent","transform","useSpring","x","to","range","output","useEffect","every","current","div","CardsList","setTimeout","compareCards","firstCard","secondCard","length","flippedCards","App","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.05703dc6.chunk.js","sourcesContent":["const cardsData = [\n  {\n    id: 1,\n    visible: false,\n    value: 1\n  },\n  {\n    id: 2,\n    visible: false,\n    value: 1\n  },\n  {\n    id: 3,\n    visible: false,\n    value: 2\n  },\n  {\n    id: 4,\n    visible: false,\n    value: 2\n  },\n  {\n    id: 5,\n    visible: false,\n    value: 3\n  },\n  {\n    id: 6,\n    visible: false,\n    value: 3\n  },\n  {\n    id: 7,\n    visible: false,\n    value: 4\n  },\n  {\n    id: 8,\n    visible: false,\n    value: 4\n  },\n  {\n    id: 9,\n    visible: false,\n    value: 5\n  },\n  {\n    id: 10,\n    visible: false,\n    value: 5\n  },\n  {\n    id: 11,\n    visible: false,\n    value: 6\n  },\n  {\n    id: 12,\n    visible: false,\n    value: 6\n  },\n]\n\nexport default cardsData;","import React from 'react';\nimport './Card.scss';\n\nconst Card = ({\n  card,\n  cards,\n  selectedCards,\n  setCards,\n  setSelectedCards\n}) => {\n  const flipCard = (card) => {\n    const updateCardVisibility = card => {\n      return cards.map(c => {\n        const changedCardVisibility = {\n          ...c,\n          visible: true,\n        };\n\n        return c.id === card.id ? changedCardVisibility : c;\n      })\n    }\n\n    setCards(updateCardVisibility(card));\n    setSelectedCards([...selectedCards, card]);\n  }\n\n  return (\n    <div\n      className='card'\n      onClick={() => flipCard(card)}\n    >\n      <div className={`card-inner ${card.visible ? 'flip-card' : ''}`}>\n        <div className='card-front'>&#9733;</div>\n        <div className='card-back'>{card.value}</div>\n      </div>\n    </div>\n  );\n};\n\nexport default Card;\n","const shuffleCards = () => {\n  const cards = document.querySelectorAll('.card');\n  cards.forEach(card => {\n    let randomPos = Math.floor(Math.random() * 12);\n    card.style.order = randomPos;\n  });\n};\n\nexport default shuffleCards;\n","import React from 'react';\nimport shuffleCards from '../../utils/shuffleCards';\nimport cardsData from '../../data/cardsData';\nimport './Resetbutton.scss';\n\nconst ResetButton = ({ setCards }) => {\n  const resetGame = () => {\n    setCards(cardsData);\n    shuffleCards();\n  };\n\n  return (\n    <div className='button-container'>\n      <button className='reset-button' onClick={resetGame}>\n        &#x21bb; Reset\n      </button>\n    </div>\n  );\n};\n\nexport default ResetButton;\n","import React, { useEffect, useRef, useState } from 'react';\nimport { useSpring, animated } from 'react-spring';\nimport './styles.scss';\n\nconst ScoreCounter = ({ cards }) => {\n  const scoreCount = useRef(0);\n  const [animate, setAnimate] = useState(false);\n  const props = useSpring({ x: animate ? 1 : 0 });\n\n  const shakeComponent = {\n    transform: props.x\n      .to({\n        range: [0, 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9, 1],\n        output: [-4, 6, -8, 8, -8, 8, -8, 6, -4, 0],\n      })\n      .to(x => `translate3d(${x}px, 0, 0)`),\n  };\n\n  useEffect(() => {\n    if (cards.every((c) => c.visible === true)) {\n      scoreCount.current++;\n      setAnimate(true);\n    }\n\n    return () => setAnimate(false);\n  }, [cards]);\n\n  return (\n    <animated.div\n      className='score-counter-container'\n      style={shakeComponent}\n    >\n      <div className='score-counter-text-container'>\n        <h1 className='score-counter'>Score: </h1>\n      </div>\n      <div className='score-counter-text-container'>\n        <h1>{scoreCount.current}</h1>\n      </div>\n    </animated.div>\n  );\n};\n\nexport default ScoreCounter;\n","import React, { useEffect, useState } from 'react'\nimport cardsData from '../../data/cardsData';\nimport Card from '../Card';\nimport ResetButton from '../ResetButton';\nimport ScoreCounter from '../ScoreCounter';\nimport shuffleCards from '../../utils/shuffleCards';\nimport './Cardslist.scss';\n\nconst CardsList = () => {\n  const [cards, setCards] = useState(cardsData);\n  const [selectedCards, setSelectedCards] = useState([]);\n\n  useEffect(() => {\n    shuffleCards();\n  }, []);\n\n  useEffect(() => {\n    setTimeout(() => {\n      compareCards(selectedCards);\n    }, 1000);\n  }, [selectedCards]);\n\n  const compareCards = (selectedCards) => {\n    const [firstCard, secondCard] = selectedCards;\n\n    if (selectedCards.length === 2) {\n      if (firstCard.value !== secondCard.value) {\n        const flippedCards = cards.map(card => {\n          const changedCardVisibility = {\n            ...card,\n            visible: false,\n          };\n          const isSelectedCard = card.id === firstCard.id || card.id === secondCard.id;\n\n          return isSelectedCard ? changedCardVisibility : card;\n        });\n\n        setCards(flippedCards);\n      }\n\n      setSelectedCards([]);\n    }\n  };\n\n  return (\n    <div>\n      <ScoreCounter cards={cards} />\n\n      <div className='cards-list'>\n        {cards.map((card) => {\n          return (\n            <Card\n              card={card}\n              cards={cards}\n              key={card.id}\n              selectedCards={selectedCards}\n              setCards={setCards}\n              setSelectedCards={setSelectedCards}\n            />\n          );\n        })}\n      </div>\n\n      <ResetButton setCards={setCards} />\n    </div>\n  );\n};\n\nexport default CardsList;\n","import React from 'react';\nimport CardsList from './components/CardsList';\nimport './App.scss';\n\nconst App = () => {\n  return (\n    <div className='container'>\n      <section className='cards-container'>\n        <CardsList />\n      </section>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}